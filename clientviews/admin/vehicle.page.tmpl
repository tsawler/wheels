{{template "admin-base" .}}

{{define "css"}}
    <link href="/static/js/ts/bootstrap4/tail.select-default.min.css" rel="stylesheet">
    <style>

        #image-list li {
            padding-left: 0.3em;
            padding-right: 0.3em;
        }

        .img__wrap {
            position: relative;
            height: 150px;
            width: 200px;
            margin-bottom: 1em;
            display: inline-block;
        }

        .img__description {
            position: absolute;
            color: #fff;
            visibility: hidden;
            opacity: 0;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            -ms-transform: translate(-50%, -50%);
            text-align: center;
            transition: opacity .2s, visibility .2s;
        }

        .img__wrap:hover .img__img {
            opacity: 0.5;
            transition: opacity .2s, visibility .2s;
        }

        .img__wrap:hover .img__description {
            visibility: visible;
            opacity: 1;
        }
    </style>
{{end}}

{{define "title"}}Inventory Item - GoBlender Admin{{end}}

{{define "admin-title"}}{{$v := index .RowSets "vehicle"}}{{$v.Year}} {{$v.Make.Make}} {{$v.Model.Model}} {{$v.Trim}}, Stock # {{$v.StockNo}}{{end}}
{{define "content-title"}}{{$v := index .RowSets "vehicle"}}{{$v.Year}} {{$v.Make.Make}} {{$v.Model.Model}} {{$v.Trim}}, Stock # {{$v.StockNo}}{{end}}

{{define "content"}}
    {{$v := index .RowSets "vehicle"}}
    {{$years := index .RowSets "years"}}
    {{$makes := index .RowSets "makes"}}
    {{$models := index .RowSets "models"}}
    {{$options := index .RowSets "options"}}


    <form method="post"
          action="/admin/{{index .StringMap "category"}}/{{index .StringMap "segment"}}/{{index .StringMap "src"}}/{{$v.ID}}"
          id="vehicle-form" novalidate class="needs-validation">
        <input type="hidden" name="csrf_token" value="{{.CSRFToken}}">
        <ul class="nav nav-tabs" id="prefTabs" role="tablist">
            <li class="nav-item">
                <a class="nav-link active" id="general-tab" data-toggle="tab" href="#general-tab-content" role="tab"
                   aria-controls="home" aria-selected="true">General</a>
            </li>

            <li class="nav-item">
                <a class="nav-link" id="detailed-tab" data-toggle="tab" href="#detailed-tab-content" role="tab"
                   aria-controls="home" aria-selected="true">Detailed</a>
            </li>

            <li class="nav-item">
                <a class="nav-link" id="images-tab" data-toggle="tab" href="#images-tab-content" role="tab"
                   aria-controls="images" aria-selected="true">Images</a>
            </li>

            <li class="nav-item">
                <a class="nav-link" id="sticker-tab" data-toggle="tab" href="#sticker-tab-content" role="tab"
                   aria-controls="window sticker" aria-selected="true">Window Sticker</a>
            </li>

            <li class="nav-item">
                <a class="nav-link" id="video-tab" data-toggle="tab" href="#video-tab-content" role="tab"
                   aria-controls="video/panorama" aria-selected="true">Video/Panorama</a>
            </li>


        </ul>

        <div class="tab-content" id="prefTabsContent">

            <div class="tab-pane fade show active" role="tabpanel" aria-labelledby="general-tab"
                 id="general-tab-content">
                <div class="row">

                    <div class="col-md-6 col-xs-12">

                        <div class="form-group mt-4">
                            <label>Year:</label>
                            <select class="custom-select" name="year"
                                    id="year">
                                {{range $years}}
                                    <option value="{{.}}" {{if eq . $v.Year}} selected {{end}}>{{.}}</option>
                                {{end}}
                            </select>
                        </div>

                        <div class="form-group">
                            <label>Vehicle Type:</label>
                            <select class="custom-select" name="vehicle_type"
                                    id="vehicle_type">
                                <option value="8" {{if eq $v.VehicleType 8}} selected {{end}}>ATV - Brute Force</option>
                                <option value="11" {{if eq $v.VehicleType 11}} selected {{end}}>ATV - Mules</option>
                                <option value="12" {{if eq $v.VehicleType 12}} selected {{end}}>ATV - Teryx</option>
                                <option value="1" {{if eq $v.VehicleType 1}} selected {{end}}>Car</option>
                                <option value="16" {{if eq $v.VehicleType 16}} selected {{end}}>Electric Bikes</option>
                                <option value="13" {{if eq $v.VehicleType 13}} selected {{end}}>Jetski</option>
                                <option value="10" {{if eq $v.VehicleType 10}} selected {{end}}>Mercury</option>
                                <option value="7" {{if eq $v.VehicleType 7}} selected {{end}}>Motorcycle</option>
                                <option value="3" {{if eq $v.VehicleType 3}} selected {{end}}>Other</option>
                                <option value="9" {{if eq $v.VehicleType 9}} selected {{end}}>Pontoon Boat</option>
                                <option value="15" {{if eq $v.VehicleType 15}} selected {{end}}>Power Boat</option>
                                <option value="17" {{if eq $v.VehicleType 17}} selected {{end}}>Scooter</option>
                                <option value="5" {{if eq $v.VehicleType 5}} selected {{end}}>SUV</option>
                                <option value="14" {{if eq $v.VehicleType 14}} selected {{end}}>Trailer</option>
                                <option value="2" {{if eq $v.VehicleType 2}} selected {{end}}>Truck</option>
                                <option value="6" {{if eq $v.VehicleType 6}} selected {{end}}>Van</option>
                                <option value="4" {{if eq $v.VehicleType 4}} selected {{end}}>Unknown</option>
                            </select>
                        </div>

                        <div class="form-group">
                            <label>Make:</label>
                            <select class="custom-select" name="vehicle_makes_id"
                                    id="vehicle_makes_id">
                                {{range $makes}}
                                    <option value="{{.ID}}" {{if eq .ID $v.VehicleMakesID}} selected {{end}}>{{.Make}}</option>
                                {{end}}
                            </select>
                        </div>

                        <div class="form-group">
                            <label>Model:</label>
                            <select class="custom-select" name="vehicle_models_id"
                                    id="vehicle_models_id">
                                {{range $models}}
                                    <option value="{{.ID}}" {{if eq .ID $v.VehicleModelsID}} selected {{end}}>{{.Model}}</option>
                                {{end}}
                            </select>
                        </div>

                        <div class="form-group">
                            <label>Trim:</label>
                            {{with .Form.Errors.Get "trim"}}
                                <label class='text-danger'>{{.}}</label>
                            {{end}}
                            <input class="form-control" id="trim" autocomplete="off" type='text' name='trim'
                                   value='{{$v.Trim}}' required>
                            <div class="invalid-feedback">
                                Please enter a value
                            </div>
                        </div>

                        <div class="form-group">
                            <label>New or Used?</label>
                            <select class="custom-select" name="used"
                                    id="used">
                                <option value="1" {{if eq $v.Used 1}} selected {{end}}>Used</option>
                                <option value="0" {{if eq $v.Used 0}} selected {{end}}>New</option>
                            </select>
                        </div>

                        <div class="form-group">
                            <label>MVI Select??</label>
                            <select class="custom-select" name="hand_picked"
                                    id="hand_picked">
                                <option value="1" {{if eq $v.HandPicked 1}} selected {{end}}>Yes</option>
                                <option value="0" {{if eq $v.HandPicked 0}} selected {{end}}>No</option>
                            </select>
                        </div>

                        <div class="form-group">
                            <label>Stock Number:</label>
                            {{with .Form.Errors.Get "stock_no"}}
                                <label class='text-danger'>{{.}}</label>
                            {{end}}
                            <input class="form-control" id="stock_no" autocomplete="off" type='text' name='stock_no'
                                   value='{{$v.StockNo}}' required>
                            <div class="invalid-feedback">
                                Please enter a value
                            </div>
                        </div>

                        <div class="form-group">
                            <label>VIN:</label>
                            {{with .Form.Errors.Get "vin"}}
                                <label class='text-danger'>{{.}}</label>
                            {{end}}
                            <input class="form-control" id="vin" autocomplete="off" type='text' name='vin'
                                   value='{{$v.Vin}}' required>
                            <div class="invalid-feedback">
                                Please enter a value
                            </div>
                        </div>

                        <div class="form-group pt-1">
                            <label>Price:</label>
                            {{with .Form.Errors.Get "cost"}}
                                <label class='text-danger'>{{.}}</label>
                            {{end}}
                            <input class="form-control" id="cost" autocomplete="off" type='text'
                                   name='cost'
                                   value='{{$v.Cost}}' required>
                            <div class="invalid-feedback">
                                Please enter a value
                            </div>
                        </div>

                        <div class="form-group pt-1">
                            <label>MSRP:</label>
                            {{with .Form.Errors.Get "total_msr"}}
                                <label class='text-danger'>{{.}}</label>
                            {{end}}
                            <input class="form-control" id="total_msr" autocomplete="off" type='text'
                                   name='total_msr'
                                   value='{{$v.TotalMSR}}' required>
                            <div class="invalid-feedback">
                                Please enter a value
                            </div>
                        </div>

                        <div class="form-group pt-1">
                            <label>Price for Display:</label>
                            {{with .Form.Errors.Get "price_for_display"}}
                                <label class='text-danger'>{{.}}</label>
                            {{end}}
                            <input class="form-control" id="price_for_display" autocomplete="off" type='text'
                                   name='price_for_display'
                                   value='{{$v.PriceForDisplay}}'>
                            <div class="invalid-feedback">
                                Please enter a value
                            </div>
                        </div>

                    </div>

                    <div class="col-md-6 col-xs-12">

                        <div class="form-group mt-4">
                            <label>Odometer:</label>
                            {{with .Form.Errors.Get "odometer"}}
                                <label class='text-danger'>{{.}}</label>
                            {{end}}
                            <input class="form-control" id="odometer" autocomplete="off" type='text' name='odometer'
                                   value='{{$v.Odometer}}' required>
                            <div class="invalid-feedback">
                                Please enter a value
                            </div>
                        </div>

                        <div class="form-group pt-1">
                            <label>Interior Colour:</label>
                            {{with .Form.Errors.Get "interior_color"}}
                                <label class='text-danger'>{{.}}</label>
                            {{end}}
                            <input class="form-control" id="interior_color" autocomplete="off" type='text'
                                   name='interior_color'
                                   value='{{$v.InteriorColour}}'>
                            <div class="invalid-feedback">
                                Please enter a value
                            </div>
                        </div>

                        <div class="form-group pt-1">
                            <label>Exterior Colour:</label>
                            {{with .Form.Errors.Get "exterior_color"}}
                                <label class='text-danger'>{{.}}</label>
                            {{end}}
                            <input class="form-control" id="exterior_color" autocomplete="off" type='text'
                                   name='exterior_color'
                                   value='{{$v.ExteriorColour}}'>
                            <div class="invalid-feedback">
                                Please enter a value
                            </div>
                        </div>

                        <div class="form-group">
                            <label>Body:</label>
                            {{with .Form.Errors.Get "body"}}
                                <label class='text-danger'>{{.}}</label>
                            {{end}}
                            <input class="form-control" id="body" autocomplete="off" type='text'
                                   name='body'
                                   value='{{$v.Body}}'>
                            <div class="invalid-feedback">
                                Please enter a value
                            </div>
                        </div>

                        <div class="form-group">
                            <label>Engine:</label>
                            {{with .Form.Errors.Get "engine"}}
                                <label class='text-danger'>{{.}}</label>
                            {{end}}
                            <input class="form-control" id="engine" autocomplete="off" type='text'
                                   name='engine'
                                   value='{{$v.Engine}}'>
                            <div class="invalid-feedback">
                                Please enter a value
                            </div>
                        </div>

                        <div class="form-group">
                            <label>Transmission:</label>
                            {{with .Form.Errors.Get "transmission"}}
                                <label class='text-danger'>{{.}}</label>
                            {{end}}
                            <input class="form-control" id="transmission" autocomplete="off" type='text'
                                   name='transmission'
                                   value='{{$v.Transmission}}'>
                            <div class="invalid-feedback">
                                Please enter a value
                            </div>
                        </div>


                        <div class="form-group pt-1">
                            <label>Drivetrain:</label>
                            {{with .Form.Errors.Get "drive_train"}}
                                <label class='text-danger'>{{.}}</label>
                            {{end}}
                            <input class="form-control" id="drive_train" autocomplete="off" type='text'
                                   name='drive_train'
                                   value='{{$v.DriveTrain}}'>
                            <div class="invalid-feedback">
                                Please enter a value
                            </div>
                        </div>

                        <div class="form-group">
                            <label>Status:</label>
                            <select class="custom-select" name="status"
                                    id="status">
                                <option value="0" {{if eq $v.Status 0}} selected {{end}}>Sold</option>
                                <option value="1" {{if eq $v.Status 1}} selected {{end}}>For Sale</option>
                                <option value="3" {{if eq $v.Status 3}} selected {{end}}>Trade In</option>
                                <option value="2" {{if eq $v.Status 2}} selected {{end}}>Pending</option>
                            </select>
                        </div>

                    </div>
                </div>
            </div>

            <div class="tab-pane fade show" role="tabpanel" aria-labelledby="detailed-tab"
                 id="detailed-tab-content">

                <div class="form-group">
                    <label>Description:</label>
                    {{with .Form.Errors.Get "description"}}
                        <label class='text-danger'>{{.}}</label>
                    {{end}}
                    <input id="description" type="hidden" name="description"
                           value="{{- if ne $v.Description "" -}}{{-  $v.Description -}}{{- end -}}"
                    >
                    <trix-editor class="trix-content" input="description"></trix-editor>
                </div>

                <div class="form-group">
                    <label>Options:</label>

                    {{range $options}}
                        <div class="custom-control custom-switch">
                            <input type="checkbox"
                                    {{if eq (index $.IntMap (printf "option_%d" .ID)) 1}}
                                        checked
                                    {{end}}
                                   class="custom-control-input" value="{{.ID}}" id="option_{{.ID}}"
                                   name="option_{{.ID}}">
                            <label class="custom-control-label" name="option_{{.ID}}"
                                   for="option_{{.ID}}">{{.OptionName}}</label>
                        </div>
                    {{end}}
                </div>

            </div>

            <div class="tab-pane fade show" role="tabpanel" aria-labelledby="images-tab"
                 id="images-tab-content">
                <div class="mt-4">
                    <a href="javascript:" onclick="uploadFile()" class="btn btn-outline-secondary">Upload Images...</a>
                </div>
                <hr>
                <input type="hidden" class="form-control" name="sort_list" id="sort-list" value="">
                <ul class="list-inline" id="image-list">
                    {{range $v.Images}}
                        <li data-id="{{.ID}}">
                            <article class="img__wrap">
                                <img alt="" class="img__img" style="width: 200px; height: 150px;"
                                     src="/static/site-content/inventory/{{$v.ID}}/{{.Image}}"/>
                                <p class="img__description">
                                    <a class="btn btn-primary btn-sm vehicle-image-handle" href="javascript:"><i
                                                class="fa fa-arrows"></i></a>
                                    <a class="btn btn-danger btn-sm" href="javascript:"
                                       onclick="confirmDeleteImage({{.ID}})"><i class="fa fa-trash"></i></a>
                                </p>
                            </article>
                        </li>
                    {{end}}
                </ul>
            </div>

            <div class="tab-pane fade show" role="tabpanel" aria-labelledby="sticker-tab"
                 id="sticker-tab-content">
                <div class="row">
                    <div class="col">
                        <a class="btn btn-outline-secondary mt-5" href="javascript:"
                           onclick="confirmPrintWindowSticker({{$v.ID}})">Print Window Sticker</a>
                    </div>
                </div>
            </div>

            <div class="tab-pane fade show" role="tabpanel" aria-labelledby="video-tab"
                 id="video-tab-content">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group pt-3">
                            <label>Choose a video:</label>
                            <div>
                                <select class="form-control" name="menu_page_id"
                                        id="car-video-list" style="width: 100%;;">
                                    <option value="0">No video</option>
                                    {{range .Videos}}
                                        <option value="{{.ID}}">{{.VideoName}}</option>
                                    {{end}}
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <hr>
                <div class="btn-group dropup">
                    <a class="btn btn-primary savebtn" href="javascript:" onclick="saveClose()" data-action="close">
                        Save and Close
                    </a>
                    <button type="button" class="btn btn-primary dropdown-toggle dropdown-toggle-split"
                            data-toggle="dropdown"
                            aria-haspopup="true" aria-expanded="false">
                        <span class="sr-only">Toggle Dropdown</span>
                    </button>
                    <div class="dropdown-menu">
                        <a class="dropdown-item" href="javascript:" onclick="val()">Save & Continue</a>
                    </div>
                </div>

                <a class="btn btn-info"
                   href="/admin/{{index .StringMap "category"}}/{{index .StringMap "segment"}}/{{index .StringMap "src"}}">Cancel</a>
            </div>
        </div>
        <input type="hidden" name="category" value="{{index .StringMap "category"}}">
        <input type="hidden" name="segment" value="{{index .StringMap "segment"}}">
        <input type="hidden" name="src" value="{{index .StringMap "src"}}">
        <input type="hidden" name="action" id="action" value="1">
    </form>

{{end}}

{{define "js"}}
    {{$v := index .RowSets "vehicle"}}
    <script src="/static/js/tus.min.js"></script>
    <script src="/static/js/ts/tail.select.min.js"></script>
    <script>

        let imageList;
        let carVideoList = document.getElementById("car-video-list");

        document.addEventListener("DOMContentLoaded", function () {
            tail.select(carVideoList, {search: true, width: '100%'});
            tail.select(carVideoList).options.handle("select", {{$v.Video.ID}}, "#");
            sortList();
            performSort();
        });

        function val() {
            document.getElementById("action").value = 0;
            let form = document.getElementById("vehicle-form");
            if (form.checkValidity() === false) {
                this.event.preventDefault();
                this.event.stopPropagation();
            }
            form.classList.add('was-validated');

            if (form.checkValidity() === true) {
                document.getElementById("vehicle-form").submit();
            } else {
                errorAlert('{{trans "form_errors" .Lang}}');
            }
        }

        function saveClose() {
            document.getElementById("action").value = 1;
            let form = document.getElementById("vehicle-form");
            if (form.checkValidity() === false) {
                this.event.preventDefault();
                this.event.stopPropagation();

            }
            form.classList.add('was-validated');

            if (form.checkValidity() === true) {
                document.getElementById("vehicle-form").submit();
            } else {
                errorAlert('{{trans "form_errors" .Lang}}');
            }
        }

        let progressWindow;
        let listView = false;
        let uploadWindow;
        let totalUploaded = 0;
        let uploadInProgress = false;

        let uploadForm = `
<form method="post" id="uploadForm" enctype="multipart/form-data">
    <div class="controls text-center">
        <div class="custom-file">
            <input type="file" class="custom-file-input" multiple name="uploaded_files"
                   id="uploaded_files" accept=".png, .jpg, .jpeg, .gif">
            <label class="custom-file-label" for="uploaded_files">
                <span class="d-inline-block text-truncate w-75" style="overflow:hidden">Choose image(s)</span>
            </label>
        </div>
    </div>
</form>

<div id="hidden_data" class="d-none">

</div>
`

        let progressBarHtml = `
<div class="progress">
    <div id="progress" class="progress-bar progress-bar-striped progress-bar-animated"
         role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"
         style="width: 100%"></div>
</div>`

        async function uploadFile() {
            totalUploaded = 0;
            uploadInProgress = true;

            const {value: formValues} = await Swal.fire({
                html: uploadForm,
                icon: 'info',
                showConfirmButton: true,
                showCancelButton: true,
                preConfirm: () => {
                    bsCustomFileInput.init();
                    var itm = document.getElementById("uploaded_files");
                    var cln = itm.cloneNode(true);
                    document.getElementById("hidden_data").appendChild(cln);
                    return [
                        document.getElementById('uploaded_files').files,
                    ]
                }
            });

            if (formValues) {

                let files = document.getElementById("uploaded_files").files;
                if (document.getElementById("uploaded_files")) {
                    document.getElementById("uploaded_files").outerHTML = "";
                }

                let totalSize = 0;

                for (let i = 0; i < files.length; i++) {
                    totalSize = totalSize + files[i].size;
                }
                console.log("Total size to upload is", totalSize);

                var sortOrder = 1;
                for (let file of files) {
                    console.log("uploading", file.name);
                    await uploadAFile(file, files.length, sortOrder, totalSize).catch(e => {
                    });
                    sortOrder++;
                }
                refreshImages();
                sortList();
                performSort();
            }
        }

        function uploadAFile(file, num, sortOrder, totalSize) {
            progressWindow = Swal.fire({
                icon: 'info',
                title: "Uploading...",
                html: progressBarHtml,
                showConfirmButton: false,
                showCancelButton: false,
            })

            return new Promise(function (resolve, reject) {
                let url = "/files/";
                if (location.protocol !== 'https:') {
                    url = 'http://localhost:1080/files/';
                }

                let nextUpload = new tus.Upload(file, {
                    endpoint: url,
                    metadata: {
                        filename: file.name,
                        filetype: file.type,
                        "id": '{{$v.ID}}',
                        "upload_type": "inventory",
                        "user_id": {{.Auth.ID}},
                        "token": '{{.Auth.Email}}',
                        "upload_to": "./ui/static/site-content/inventory/{{$v.ID}}",
                        "endpoint": 'http://{{.TusHost}}/tusd/hook',
                        "sort_order": sortOrder,
                    },
                    onError: function (error) {
                        progressWindow.close();
                        errorAlert(error)
                    },
                    onChunkComplete: function () {
                    },
                    onProgress: function (bytesUploaded, bytesTotal) {
                        if (document.getElementById("progress")) {
                            console.log("total uploaded:", totalUploaded);
                            console.log("bytes uploaded", bytesUploaded);

                            var progressBar = document.getElementById("progress");
                            var percentage = ((totalUploaded + bytesUploaded) / totalSize * 100).toFixed(2);

                            progressBar.setAttribute("aria-valuenow", percentage.toString());
                            progressBar.setAttribute("style", 'width: ' + percentage + '%;');
                            if (percentage >= 100) {
                                progressWindow.close();
                            }
                        }
                        console.log(file.name, totalUploaded, totalSize, percentage + "%")
                    },
                    onSuccess: function () {
                        uploadInProgress = false;
                        totalUploaded = totalUploaded + file.size;
                        refreshImages();
                        sortList();
                        setTimeout(function () {
                            refreshImages();
                            sortList();
                            performSort();
                        }, 1000);
                    }
                })
                nextUpload.start();

                if (uploadInProgress === true) {
                    console.log("rejecting");
                    reject();
                }

                uploadInProgress = true;
                resolve("Done");
            });
        }

        $(document).ready(function () {
            $('a[data-toggle="tab"]').on('show.bs.tab', function (e) {
                localStorage.setItem('activeTab', $(e.target).attr('href'));
            });
            let activeTab = localStorage.getItem('activeTab');
            if (activeTab) {
                $('#prefTabs a[href="' + activeTab + '"]').tab('show');
            }
        });

        async function confirmDeleteImage(x) {
            attention.confirm({
                html: "Are you sure you want to delete this image?",
                icon: 'warning',
                callback: function (result) {
                    if (result !== false) {
                        let formData = new FormData
                        formData.append("csrf_token", '{{.CSRFToken}}');
                        let ajax = new XMLHttpRequest();
                        ajax.open("POST", "/admin/delete-vehicle-image-json/" + x);
                        ajax.send(formData);
                        ajax.onreadystatechange = function () {
                            if ((ajax.readyState === 4) && (ajax.status === 200)) {
                                let resp = ajax.response;
                                let json = JSON.parse(resp);
                                console.log(resp);
                                if (!json.okay) {
                                    errorAlert("Errors: " + json.message);
                                } else {
                                    console.log("refreshing & sorting");
                                    refreshImages();
                                    sortList();
                                    performSort();
                                    setTimeout(function () {
                                        refreshImages();
                                        sortList();
                                        performSort();
                                    }, 1000);
                                }
                            } else if ((ajax.readyState === 4) && (ajax.status !== 200)) {
                                errorAlert("Error: Status " + ajax.status);
                            }
                        }
                    }
                }
            });
        }

        function performSort() {
            let items = imageList.toArray();
            let obj = [];
            for (let i = 0; i < items.length; i++) {
                obj.push({id: items[i], order: (i + 1)});
            }
            document.getElementById("sort-list").value = JSON.stringify(obj);
        }

        function sortList() {
            var elementExists = !!document.getElementById("image-list");
            if (elementExists) {
                var el = document.getElementById('image-list');
                imageList = Sortable.create(el, {
                    animation: 150,
                    chosenClass: 'sortable-chosen',
                    handle: '.vehicle-image-handle',
                    onUpdate: function (event) {
                        performSort();
                    },
                    onAdd: function (event) {
                        performSort();
                    },
                    onRemove: function (event) {
                        performSort();
                    }
                });
            }
        }

        function refreshImages() {
            let formData = new FormData();
            formData.append("csrf_token", '{{.CSRFToken}}');
            let ajax = new XMLHttpRequest();
            ajax.open("POST", "/admin/vehicle-images-json/{{$v.ID}}");
            ajax.send(formData);
            ajax.onreadystatechange = function () {
                if ((ajax.readyState === 4) && (ajax.status === 200)) {
                    let resp = ajax.response;
                    let json = JSON.parse(resp);
                    let html = "";
                    let imageList = document.getElementById("image-list");
                    imageList.innerHTML = "";
                    if (json !== null) {
                        json.forEach(function (item) {
                            html += `
<li>
<article class="img__wrap">
    <img alt="" class="img__img" style="width: 200px; height: 150px;"
         src="/static/site-content/inventory/{{$v.ID}}/${item.image}"/>
    <p class="img__description">
        <a class="btn btn-primary btn-sm vehicle-image-handle" href="javascript:"><i
                    class="fa fa-arrows"></i></a>
        <a class="btn btn-danger btn-sm" href="javascript:"
           onclick="confirmDeleteImage(${item.id})"><i class="fa fa-trash"></i></a>
    </p>
</article>
</li>`
                        })
                        imageList.innerHTML = html;
                    }
                }
            }
        }

        async function confirmPrintWindowSticker(x) {
            attention.confirm({
                html: "Are you sure download the window sticker as a PDF?",
                icon: 'question',
                callback: function (result) {
                    if (result !== false) {
                        window.location.href = "/admin/inventory/print-window-sticker/" + x;
                    }
                }
            });
        }
    </script>
{{end}}